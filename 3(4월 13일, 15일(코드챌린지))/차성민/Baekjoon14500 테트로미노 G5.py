#백준 14500 테트로미노 G5
#테트로미노가 놓인 칸에 쓰인 수들의 합의 최댓값 출력
#브루투포스 문제, 실패
# 너무 어렵게 생각하지말고 일단 해보는게 좋을때가 있음.

import sys
sys.stdin = open('text/14500.txt', 'r')

n, m = map(int, input().split()) # 세로 X 가로
arr = []
for i in range(n):
    arr.append(list(map(int, input().split())))

# 5가지 경우에 대해 모든 케이스를 다 돌려 봐야하나? = > 브루투포스 문제 보고 아..
# 회전 등 모든 경우를 계산 ==> 무려 19개 케이스

# list안에 모양별로 다 좌표 세팅하고 하나씩 돌리며 가져오기 혹은 x, y좌표 고려 값 모아두고 가져오기
dx = [
    [0, 0, 0], [1, 2, 3], [0, 1, 1], [1, 2, 2], [0, 0, -1], [-1, -2, -2], [0, 0, 1], [1, 2, 2],
    [0, 0, 1], [-1, -2, -2], [0, 0, -1], [1, 1, 2], [0, -1, -1], [1, 1, 2], [0, 1, 1],
    [0, 0, 1], [-1, -1, -2], [0, 0, -1], [1, 1, 2]
      ]
dy = [
    [1, 2, 3], [0, 0, 0], [1, 0, 1], [0, 0, 1], [1, 2, 2], [0, 0, -1], [-1, -2, -2], [0, 0, -1],
    [1, 2, 2], [0, 0, 1], [-1, -2, -2], [0, 1, 1], [1, 1, 2], [0, -1, -1], [1, 1, 2],
    [1, 2, 1], [0, 1, 0], [-1, -2, -1], [-1, 0, 0]
]

res = 0
for i in range(n):
    for j in range(m):
        for k in range(19): #19개의 케이스
            block = arr[i][j]
            # 좌표를 먼저 하나 지정을 해준 이후에 19개 케이스를 탐색하는 것이기 때문에 3번 반복하며 구해줌.
            for l in range(3):
                x = i + dx[k][l]
                y = j + dy[k][l]
                if 0 <= x < n and 0 <= y < m: #경계선 체크
                    block += arr[x][y]
                else:
                    break
            else:
                if block > res:
                    res = block
print(res)





